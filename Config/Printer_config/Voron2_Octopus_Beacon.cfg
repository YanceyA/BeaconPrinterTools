# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## This config is has been updated to work with the Beacon 3D Surface Scanner and will not
## work with with the voron stock inductive probe.

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Hotend heater pin                    [extruder] section
## Homing end position                  [gcode_macro G32] section
## Beacon MCU path                      [beacon] section
## Beacon Y offset                      [beacon] section
## Z Home Position X,Y                  [beacon] section
## Enable Resonance Tester			    [resonance_tester] if Beacon RevH installed				
## Zero Reference Position              [bed_mesh] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Fine tune E steps                    [extruder] section
## Setup Print_Start macro	            [print_start] macro
## Slicer configuration                 Located in the slicer of choice - See https://github.com/YanceyA/BeaconPrinterTools/blob/main/Config/Print_start/Print_start.md

[mcu]
##  Obtain definition by "ls /dev/serial/by-id/*" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/{REPLACE WITH YOUR SERIAL}
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 210

##  Uncomment below for 300mm build
#position_max: 260

##  Uncomment below for 350mm build
#position_max: 310

##--------------------------------------------------------------------
position_min: -5

endstop_pin: probe:z_virtual_endstop
#   Configure z homing to use beacon as a virtual endstop
homing_retract_dist: 0 
#   Beacon does not require a homing retract. Setting this to something
#   other than 0 will cause occasional erroneous results.

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: PC1
## Octopus 1.0 & 1.1.  Octopus PRO 1.0
#enable_pin: !PA0
## Octopus PRO 1.1
#enable_pin: !PA2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
## Octopus 1.0 & 1.1.  Octopus PRO 1.0
#heater_pin: PA2
## Octopus PRO 1.1
#heater_pin: PA0
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type:
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
control = pid
pid_kp = 26.213
pid_ki = 1.304
pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
##  Uncomment the following line if using the default SSR wiring from the docs site
#heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
#heater_pin: PA1
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
#sensor_type:
sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Z Probe - Beacon
#####################################################################

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_<..addyourserial..>-if00
##   Path to the serial port for the beacon device. 
x_offset: 0 
##	X offset for Stealthburner style toolhead is 0
y_offset: <y> 
##	Update with offset from nozzle center to beacon coil center.
##	This will be positive if beacon is behind the nozzle.
mesh_main_direction: x
mesh_runs: 2

default_probe_method: proximity
##	Sets the default probing method for mesh, tilt, qgl, probe, etc.
home_method: contact 
##	Use contact for homing if the printer is unhomed
home_method_when_homed: proximity 
##	After initial calibration use induction homing
home_autocalibrate: unhomed 
##	Calibrate beacon on first home

contact_max_hotend_temperature: 180 
##	Temperature limit for the hotend when contacting, override this for temps which may damage some surfaces.

##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#home_xy_position: 125, 125 

##  Uncomment for 300mm build
#home_xy_position: 150, 150 

##  Uncomment for 350mm build
#home_xy_position: 175, 175 

##--------------------------------------------------------------------

home_z_hop: 5
home_z_hop_speed: 30
home_xy_move_speed: 300


#####################################################################
#   Accelerometer - RevH Beacon
#####################################################################

## Uncomment if RevH Beacon is installed

#[resonance_tester]
#accel_chip: beacon
##   Selects beacon as the accelerometer used for resonance testing. This value
##   can be used to switch between multiple accelerometers in your system.

##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#probe_points: 125, 125, 20 

##  Uncomment for 300mm build
#probe_points: 150, 150, 20 

##  Uncomment for 350mm build
#probe_points: 175, 175, 20 

##	Default X,Y,Z position for resonance testing.
##--------------------------------------------------------------------


#####################################################################
#   Bed Mesh - Beacon
#####################################################################

[bed_mesh]
speed: 100
##   Movement speed during mesh measurement.

##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#zero_reference_position: 125, 125 

##  Uncomment for 300mm build
#zero_reference_position: 150, 150 

##  Uncomment for 350mm build
#zero_reference_position: 175, 175 

##   Setting this parameter will normalize mesh adjustments to the offset found
##   at the specified position. This should be the same as your
##   home_xy_position position and the position where beacon_calibrate was performed.
##--------------------------------------------------------------------



#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed

##  Exhaust fan - FAN3
#[heater_fan exhaust_fan]
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
##Octopus 1.0 & 1.1, Octopus PRO 1.0
#pin: PB10
##Octopus PRO 1.1
#pin: PB0
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
#gantry_corners:
#   -60,-10
#   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------


##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------


##  mini12864 LCD Display
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    FAST_QGL
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
  [gcode_macro BEACON_VARS]
variable_beacon_contact_calibration_temp: 150                           # nozzle temperature for auto calibration
variable_adaptive_mesh: False                                           # REQUIRES zero_reference_position to be setup in [bed_mesh]
# Do not modify below
gcode:

[gcode_macro FAST_QGL]
gcode:
    M117 QUAD_GANTRY_LEVEL
    {% if printer.configfile.settings.quad_gantry_level %}
        {% if printer.quad_gantry_level.applied == False %}
            QUAD_GANTRY_LEVEL RETRY_TOLERANCE=1
        {% endif %}
        QUAD_GANTRY_LEVEL horizontal_move_z=2
    {% endif %} 

[gcode_macro PRINT_START]
## Refer to the following github for guidance on how to setup your slicer to use this macro
## https://github.com/YanceyA/BeaconPrinterTools/blob/main/Config/Print_start/Print_start.md
gcode:
    # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}

    # Collecting variables
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% if printer.configfile.settings['beacon'].home_z_hop is defined %}
        {% set z_hop = printer.configfile.settings['beacon'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['beacon'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['beacon'].home_z_hop_speed|float %}
    {% else %}
        {% set z_hop = printer.configfile.settings['safe_z_home'].home_z_hop|float %}
        {% set speed = printer.configfile.settings['safe_z_home'].home_xy_move_speed|float %}
        {% set z_hop_speed = printer.configfile.settings['safe_z_home'].home_z_hop_speed|float %}
    {% endif %}
    {% set beacon_contact_calibration_temp = printer["gcode_macro BEACON_VARS"].beacon_contact_calibration_temp|default(150)|int %}
    {% set adaptive_meshing = printer["gcode_macro BEACON_VARS"].adaptive_mesh|default(false) %}

    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    {% if printer.toolhead.homed_axes != "xy" %}
        G28 XY                                                                                     # Partial home (XY)
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}
    G90                                                                                         # Absolute positioning

    BED_MESH_CLEAR                                                                              # Clears old saved bed mesh (if any)
    SET_GCODE_OFFSET Z=0                                                                        # Clears current offset

    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED|int > 90 %}
        M106 S255                                                                               # Turns on the Part cooling fans

        {% if printer.configfile.settings["output_pin nevermore"] is defined %}
            SET_PIN PIN=nevermore VALUE=1                                                       # Turns on nevermore if setup
        {% endif %}

        SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"                                               # Displays info
        M190 S{target_bed}                                                                      # Sets the target temp for the bed

        {% if printer.configfile.config["temperature_sensor chamber"] is defined %}
            SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"                                  # Displays info
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}       # Waits for chamber to reach desired temp
        {% endif %}

	# If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
        SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"                                               # Displays info
        M190 S{target_bed}                                                                      # Sets the target temp for the bed

        SET_DISPLAY_TEXT MSG="Soak for 5min"                                                    # Displays info
        G4 P300000                                                                              # Waits 5 min for the bedtemp to stabilize
    {% endif %}
	
	
    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}
    
    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    # If you don't change build plates then you may remove this by commenting it out
    G28 Z METHOD=CONTACT CALIBRATE=1                                                            # Calibrate z offset and beacon model hot
    
    {% if printer.quad_gantry_level is defined and not printer.quad_gantry_level.applied %}
        SET_DISPLAY_TEXT MSG="QGL"                                                              # Displays info
        {% if printer.configfile.config["gcode_macro FAST_QGL"] is defined %}
            {% if printer.configfile.settings['beacon'].default_probe_method != contact %}
                FAST_QGL                                                                        # Levels the buildplate via QGL but FASTER
            {% endif %}
        {% else %}
            quad_gantry_level                                                                   # Levels the buildplate via QGL
        {% endif %}
        G28 Z                                                                                   # Homes Z again after QGL
    {% endif %}

    ##  comment if you want to load a previous mesh
    SET_DISPLAY_TEXT MSG="Bed mesh"                                                             # Displays info
    {% if adaptive_meshing %}
        bed_mesh_calibrate ADAPTIVE=1                                                           # Runs an adaptive bed mesh
    {% else %}
        bed_mesh_calibrate                                                                      # Runs a bed mesh 
    {% endif %}

    {% if printer.configfile.config["gcode_macro WIPE_NOZZLE"] is defined %}
        WIPE_NOZZLE                                                                             # Wipes the nozzle via macro if setup
    {% endif %}

    SET_DISPLAY_TEXT MSG="Hotend: {beacon_contact_calibration_temp}c"                           # Displays info
    M109 S{beacon_contact_calibration_temp}                                                     # Heats up the nozzle to contact temps
    
    G28 Z METHOD=CONTACT CALIBRATE=0                                                            # Calibrate z offset only after tilt/mesh


    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"                                           # Displays info 
    {% if printer.configfile.config["gcode_macro SMART_PARK"] is defined %}
        SMART_PARK                                                                              # Parks using KAMP
    {% else %}
        G1 Z{z_hop} F{z_hop_speed}                                                              # Moves to z_hop height
        G1 X{x_wait} Y{y_wait} F{speed}                                                         # Goes to center of the bed
    {% endif %}

	M107                                                                                        # Turns off partcooling fan
    M109 S{target_extruder}                                                                     # Heats the nozzle to printing temp
    
    {% if printer.configfile.config["gcode_macro _BEACON_SET_NOZZLE_TEMP_OFFSET"] is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET                                                          # Adds toolhead expansion offset (REQUIRES ADDITIONAL MACROS NOT BY DEFAULT Found at:https://github.com/YanceyA/Beacon_Thermal_Expansion_Compensation )
    {% endif %}

    SET_GCODE_OFFSET Z_ADJUST=0                                                                 # Apply any additional offset u wish to apply

    # Gets ready to print by doing a purge line
    SET_DISPLAY_TEXT MSG="Printer goes brr"                                                     # Displays info
    {% if printer.configfile.config["gcode_macro PURGE_NOZZLE"] is defined %}
        PURGE_NOZZLE                                                                            # Purges the nozzle via macro if setup
    {% elif printer.configfile.config["gcode_macro LINE_PURGE"] is defined %}
        LINE_PURGE                                                                              # Purges the nozzle using KAMP adaptive purging if setup
    {% elif printer.configfile.config["gcode_macro VORON_PURGE"] is defined %}
        VORON_PURGE                                                                             # Purges the nozzle using KAMP adaptive purging if setup
    {% endif %}
   
    G90    
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0


